# build: this tells Docker where to look for the Dockerfile that builds the
# image that runs in this container.

# container_name: container_name

# restart: if the container crashes, this option specifies what to do. set all 3
# of them to unless-stopped, as specified in the subject

# depends_on: you can use this to ensure one container is build before another.
# since wordpress requires a database to store its content, I chose to have
# wordpress depend on mariadb.

# networks: what network should the container be a part of. more on this later

# volumes: this is the most annoying part of the project. So a volume is a folder
# on your disk that you mount onto a folder on the container. it's similar to a
# shared folder. the volumes line is split by colons:
#  {PATH_TO_DISK_FOLDER}:{PATH_TO_CONTAINER_FOLDER}
# You can put a second colon at the end to specify permissions (:ro sets it to
# read-only, :rw to read and write, etc.), but this isn't necessary.
# The path to disk folder needs to be /Users/{login}/data. you can specify this
# in your .env file, just make sure your Makefile includes the .env file before
# making.

# docker-compose.yml
# version: "3.8"
# services:

#   nginx:
#     container_name: nginx
#     build: ./requirements/nginx
#     ports:
#       - "443:443"
#     restart: always
#     networks:
#             - Inception
#     volumes:
#       -  wordpress_data:/var/www/html

#   wordpress:
#       container_name: wordpress
#       build: ./requirements/wordpress
#       # image: wordpress
#       ports:
#           - "9000"
#       networks:
#           - Inception
#       volumes:
#           -  wordpress_data:/var/www/html
#       restart: always
#       # environment:
#       #     - .env
#       # depends_on:
#       #     - mariadb
#   # wordpress:
#   #   container_name: wordpress
#   #   build: ./requirements/wordpress
#   #   ports:
#   #     - "9000:9000"
#   #   restart: always
#   #   networks:
#   #           - Inception
#   #   volumes:
#   #     - wordpress_data:/var/www/html

#   # mysql:
#   #   image: mysql:8.0.27
#   #   container_name: mysql
#   #   environment:
#   #     MYSQL_ROOT_PASSWORD: '<root-password>'
#   #     MYSQL_DATABASE: helloworld
#   #     MYSQL_USER: helloworld
#   #     MYSQL_PASSWORD: '<db-password>'
#   #   ports:
#   #     - "3306:3306"
#   #   volumes:
#   #     - ./database/mysql:/var/lib/mysql

#   # phpmyadmin:
#   #   image: ./srcs/Wordpress
#   #   container_name: php
#   #   links:
#   #     - mysql
#   #   environment:
#   #     PMA_HOST: mysql
#   #     PMA_PORT: 3306
#   #     PMA_ARBITRARY: 1
#   #   restart: always
#   #   ports:
#   #     - 8085:80
# volumes: 
#     wordpress_data:
#         driver: local
#         driver_opts:
#             o: bind
#             type: none
#             device: '/home/zsidki/data/wordpress'


version: "3"
services:
  nginx:
    container_name: nginx
    build: ./requirements/nginx
    image: nginx
    ports:
      - "443:443"
    networks:
        - Inception
    restart: always
    volumes:
      - wordpress_data:/var/www/html/
    depends_on:
        - wordpress


  wordpress:
    build: ./requirements/wordpress
    image: wordpress
    container_name: wordpress
    ports:
      - "9000"
    networks:
      - Inception
    restart: always
    environment:
      - .env
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
        - mariadb

  mariadb:
    container_name: mysql
    build: ./requirements/mariadb
    image: mariadb
    environment:
      - .env
    ports:
      - "3306:3306"
    networks:
      - Inception
    volumes:
      - mariadb_data:/var/lib/mysql
    restart: always

volumes:
    wordpress_data:
        driver: local
        driver_opts:
            type: none
            device: '/Users/zsidki/data/wordpress'
            o: bind
    mariadb_data:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: '/Users/zsidki/data/mariadb'

networks:
    Inception:
        name: Inception
        driver: bridge

