# build: this tells Docker where to look for the Dockerfile that builds the
# image that runs in this container.

# container_name: container_name

# restart: if the container crashes, this option specifies what to do. set all 3
# of them to unless-stopped, as specified in the subject

# depends_on: you can use this to ensure one container is build before another.
# since wordpress requires a database to store its content, I chose to have
# wordpress depend on mariadb.

# networks: what network should the container be a part of. more on this later

# volumes: this is the most annoying part of the project. So a volume is a folder
# on your disk that you mount onto a folder on the container. it's similar to a
# shared folder. the volumes line is split by colons:
#  {PATH_TO_DISK_FOLDER}:{PATH_TO_CONTAINER_FOLDER}
# You can put a second colon at the end to specify permissions (:ro sets it to
# read-only, :rw to read and write, etc.), but this isn't necessary.
# The path to disk folder needs to be /Users/{login}/data. you can specify this
# in your .env file, just make sure your Makefile includes the .env file before
# making.

# docker-compose.yml
version: "3.8"
services:
  nginx:
    container_name: nginx
    build: ./srcs/Nginx
    command: nginx -g "daemon off;"
    links:
      - php
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
  php:
    container_name: php
    build: ./srcs/wordpress/php
    links:
      - mysql
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html

  mysql:
    image: mysql:8.0.27
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: '<root-password>'
      MYSQL_DATABASE: helloworld
      MYSQL_USER: helloworld
      MYSQL_PASSWORD: '<db-password>'
    ports:
      - "3306:3306"
    volumes:
      - ./database/mysql:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8085:80
volumes:
  mariadb: {}


